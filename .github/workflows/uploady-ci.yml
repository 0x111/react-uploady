name: Uploady CI Flow

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# defaults:
#   run:

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "14.17.6"
      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}          
      - name: "Install dependencies"
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn --pure-lockfile      
      - name: "Run postinstall if cached"
        if: steps.yarn-cache.outputs.cache-hit == 'true'
        run: yarn postinstall            
      - name: "Build uploady libs"
        run: yarn build
      - name: "Upload Artifacts: built-libs"
        uses: actions/upload-artifact@v2
        with:    
          name: built-libs
          path: packages/**/lib          

  test:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2      
      - uses: actions/setup-node@v2
        with:
          node-version: "14.17.6"
      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: "Download artifacts: built-libs"
        uses: actions/download-artifact@v2
        with:
          name: built-libs         
          path: packages          
      - name: "Test Code (lint, flow, jest, types)"    
        run: yarn test:ci
        env: 
          JEST_JUNIT_OUTPUT_DIR: "reports/junit/js-test-results.xml"
      - name: "Upload Artifacts: test coverage report"
        uses: actions/upload-artifact@v2
        with:    
          name: jest-coverage
          path: .jest-coverage     

  coverage:
    needs: test
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest  
    steps:
      - name: "Download artifacts: test coverage report"
        uses: actions/download-artifact@v2
        with:
          name: jest-coverage 
      - name: "Report Coverage to Codecov"
        uses: codecov/codecov-action@v2.1.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
    
  bundle:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2      
      - uses: actions/setup-node@v2
        with:
          node-version: "14.17.6"
      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: "Bundle libs & storybook"
        run: yarn bundle:ci
      - name: "Upload Artifacts: libs bundle"
        uses: actions/upload-artifact@v2
        with:    
          name: libs-bundle
          path: bundle
      - name: "Upload Artifacts: storybook build"
        uses: actions/upload-artifact@v2
        with:    
          name: sb-build
          path: .sb-static     
          
  cypress-e2e:
    needs: bundle
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: "Download artifacts: libs bundle"
        uses: actions/download-artifact@v2
        with:
          name: libs-bundle             
      - name: "Download artifacts: storybook build"
        uses: actions/download-artifact@v2
        with:
          name: sb-build    
      - run: |
            ls
#       - name: "Cypress run E2E"
#         uses: cypress-io/github-action@v2
#         with:
#           command: yarn e2e:ci
          
          
          
          
#           cache: "yarn"
#           cache-dependency-path: "**/yarn.lock"
#           key: yarn-${{ hashFiles('yarn.lock') }}
#           restore-keys: yarn-

#   build:

#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         node-version: [14.7.6]
#         # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

#     steps:
#     - uses: actions/checkout@v2
#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v2
#       with:
#         node-version: ${{ matrix.node-version }}
#         cache: 'npm'
#     - run: npm ci
#     - run: npm run build --if-present
#     - run: npm test
